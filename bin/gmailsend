#!/usr/bin/env python2
"""
Send an email using gmail's SMTP servers.

The very minimal option syntax mimics the usual mail command.
The body of the email is read from standard input.

Gets credentials from ~/.gmcred (newline separated email and password).
So use a separate account that you don't care about!
Also, enable 2-Step Verification and create an App Password:
    https://support.google.com/accounts/answer/185833
"""
# The MIT License
#
# Copyright (c) 2012-2018 Simon Parent
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use, copy,
# modify, merge, publish, distribute, sublicense, and/or sell copies
# of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
# KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
# AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
import argparse
import os
import smtplib
import sys

def credentials():
    with open(os.path.join(os.getenv('HOME'), '.gmcred')) as f:
        username, password = f.read().rstrip('\n').split('\n')
        return username, password

def send_with_gmail(recipients, body):
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.ehlo()
    server.starttls()
    server.ehlo()
    username, password = credentials()
    server.login(username, password)
    server.sendmail(username, recipients, body)
    server.quit()

def main():
    parser = argparse.ArgumentParser(description=__doc__,
        formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument('recipient', nargs='+')
    parser.add_argument('-s', '--subject')
    args = parser.parse_args()
    body = sys.stdin.read()
    if args.subject is not None:
        body = 'Subject: %s\n%s' % (args.subject, body)
    recipients = args.recipient
    if len(recipients) > 0:
        body = 'To: %s\n%s' % (', '.join(recipients), body)
    assert len(recipients) > 0
    for r in recipients:
        assert '@' in r
    send_with_gmail(recipients, body)

if __name__ == '__main__':
    main()
